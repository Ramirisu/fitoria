name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04]
        cxx: [g++-12, cl]
        std: [20]
        build_type: [Debug, Release]
        generator: [Ninja]
        disable_openssl: [ON, OFF]
        exclude:
          - os: windows-2022
            cxx: g++-12
          - os: ubuntu-22.04
            cxx: cl

    steps:
      - uses: actions/checkout@v3
        
      - name: Cache CPM.cmake packages
        id: cache-cpm
        uses: actions/cache@v3
        with:
          path: ~/cpm-cache
          key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
          restore-keys: |
            ${{ runner.os }}-cpm-

      - name: Add msbuild to PATH env
        if: matrix.cxx == 'cl'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install ninja cmake openssl
          ninja --version
          cmake --version

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake libssl-dev
          ${{ matrix.install }}
          ninja --version
          cmake --version

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake ninja
          ninja --version
          cmake --version

      - name: Configure
        shell: bash
        run: |
          cmake \
            -B build \
            -G "${{ matrix.generator }}" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_STANDARD:STRING=${{ matrix.std }} \
            -DCPM_SOURCE_CACHE=~/cpm-cache \
            -DFITORIA_BUILD_EXAMPLES=ON \
            -DFITORIA_BUILD_TESTS=ON \
            -DFITORIA_DISABLE_OPENSSL=${{ matrix.disable_openssl }}

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        shell: bash
        working-directory:  ${{ github.workspace }}/build
        run: ctest --output-on-failure .
